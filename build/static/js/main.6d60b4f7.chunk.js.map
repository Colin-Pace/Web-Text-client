{"version":3,"sources":["landing/landing.js","registration/registration.js","note/note.js","folderMenu/folderMenu.js","folderNotePair/folderNotePair.js","tableTop/tableTop.js","account/account.js","App.js","index.js"],"names":["Landing","props","onSubmitForm","bind","e","preventDefault","items","push","target","nameToAdd","value","pwToAdd","this","onAddItems","className","to","onSubmit","type","placeholder","name","React","Component","Registration","Note","noteName","noteText","console","log","noteDetail","FolderMenu","listenEditFolder","listenDeleteFolder","listenCreateNote","folderID","deleteFolder","createNote","href","onClick","FolderNotePair","state","selectedFolderID","folderIDToEdit","noteIDToEdit","handleFolderLink","handleNoteLink","handleEditFolderClick","listenEditFolderEnter","setState","parseInt","getAttribute","noteClicked","noteClickedFolder","onNoteClick","newFolderName","folderEnter","editFolder","foldersAndNotes","item","length","style","display","data-folderID","itr","data-noteid","data-notefolder","TableTop","folderIDForNoteCreation","selectedNoteID","noteNameIDToEdit","handleChange","handleSubmit","onButtonClick","combineFolderIDNoteDetail","handleNoteTextLink","handleNoteNameLink","listenEditNote","listenDeleteNote","listenEditNoteName","listenForTableTopReady","data","folder","createFolder","onLogoutClick","foldersAndNotesToLoad","noteNameToLoad","undefined","noteToLoad","onChange","valueTB","noteID","noteEnter","editNote","noteNameEnter","editNoteName","idAndDetail","deleteNote","noteContent","Account","baseURL","App","username","password","authToken","accountDeleted","registrationMessage","notesToView","folderCreated","folderEdited","folderDeleted","noteCreated","noteViewed","notes","noteEdited","noteNameEdited","noteDeleted","userID","handleLogin","handleRegistration","handleAccount","handleTableTopReady","handleCreateFolder","handleEditFolder","handleDeleteFolder","handleCreateNote","handleViewNote","handleEditNote","handleEditNoteName","handleDeleteNote","handleLogout","userName","window","btoa","makeBasicAuthToken","url","postBody","options","method","body","JSON","stringify","headers","fetch","then","res","ok","Error","history","json","folderName","noteToView","path","exact","render","viewNote","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6d60b4f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './landing.css';\n\nimport { Link } from 'react-router-dom';\n\n\n\n\n\nexport default class Landing extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    items.push(e.target.nameToAdd.value);\n\n    items.push(e.target.pwToAdd.value);\n\n    e.target.nameToAdd.value = '';\n\n    e.target.pwToAdd.value = '';\n\n    this.props.onAddItems(items);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <div className = \"header\">\n\n          <Link to = '/registration' className = 'registration'>\n\n            Registration\n\n          </Link>\n\n        </div>\n\n        <div className = \"page\">\n          <h1>Login</h1>\n\n          <div className = \"entryPageStyle\">\n\n            <div className = \"instructions\">\n              <p>Application instructions: If you have an account, please enter your name and password to go to the table top. There you can enter the name of a folder, select created folders and make posts for them, select posts, and enter post text. If you do not have an account, please go to registration to create one.</p>\n            </div>\n\n            <form onSubmit = { this.onSubmitForm } >\n\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n              <div className = \"labelsInputsButton\">\n\n                <div className = \"labelsInputs\">\n\n                  <div className = \"labelInputOne\">\n\n                    <label className = \"labelOne\">\n\n                      Name:\n\n                    </label>\n\n                    <input\n                              type = \"text\"\n                              placeholder = 'User Name'\n                              name = 'nameToAdd'\n                              className = \"inputOne\"\n                    />\n\n                  </div>\n\n                  <br/>\n\n                  <div className = \"labelInputTwo\">\n\n\n                    <label>\n\n                      Password:\n\n                    </label>\n\n                    <input\n                            type = \"text\"\n                            placeholder = 'Secret123!@#'\n                            name = 'pwToAdd'\n                            className = \"inputTwo\"\n                    />\n\n                  </div>\n                </div>\n\n\n                <div className = \"button\">\n\n                  <button type = 'submit'>Enter</button>\n\n                </div>\n\n              </div>\n\n            </form>\n\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Landing from '../landing/landing.js';\n\nimport './registration.css';\n\n\n\n\nexport default class Registration extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    items.push(e.target.nameToAdd.value);\n\n    items.push(e.target.pwToAdd.value);\n\n    e.target.nameToAdd.value = '';\n\n    e.target.pwToAdd.value = '';\n\n    this.props.onAddItems(items);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div >\n\n        <div className = \"header\" >\n\n          <Link to = '/landing' className = 'landingLink'>\n\n            Login\n\n          </Link>\n\n        </div>\n\n\n        <div className = \"registrationPageStyle\">\n\n          <h1>Registration</h1>\n\n          <br/><br/>\n\n          <form onSubmit = { this.onSubmitForm } >\n\n            <label>\n\n              Name:\n\n              <input\n                      type = \"text\"\n                      placeholder = 'User Name'\n                      name = 'nameToAdd'\n                      className = \"nameInput\"\n              />\n\n            </label>\n\n            <br/>\n            <br/>\n\n            <label>\n\n              Password:\n\n              <input\n                      type = \"text\"\n                      placeholder='Secret123!@#'\n                      name = 'pwToAdd'\n                      className = \"passwordInput\"\n              />\n\n            </label>\n\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n            <button type = 'submit'>Enter</button>\n\n          </form>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './note.css';\n\n\n\nexport default class Note extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    if (e.target.noteName.value === \"\" || e.target.noteText.value === \"\") {\n\n      console.log(\"Cannot create an empty note\");\n\n    } else {\n\n      items.push(e.target.noteName.value);\n\n      items.push(e.target.noteText.value);\n\n      e.target.noteName.value = \"\";\n\n      e.target.noteText.value = \"\";\n\n      this.props.noteDetail(items);\n\n    }\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <form onSubmit = { this.onSubmitForm } >\n          <center>\n            <label>\n\n              <input type = \"text\" placeholder = 'Weather' name = 'noteName' className = \"noteTitle\" />\n\n            </label>\n          </center>\n\n          <br/>\n          <br/>\n\n          <label>\n\n            <textarea  name = \"noteText\" placeholder = 'Enter note text here'>\n\n            </textarea>\n\n          </label>\n\n          <br/>\n          <br/>\n\n          < input type = \"submit\" className = \"submit\"/ >\n\n        </form>\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport './folderMenu.css'\n\n\n\n\n\nexport default class FolderMenu extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.listenEditFolder = this.listenEditFolder.bind(this);\n\n    this.listenDeleteFolder = this.listenDeleteFolder.bind(this);\n\n    this.listenCreateNote = this.listenCreateNote.bind(this);\n\n  }\n\n\n  listenEditFolder(e) {\n\n    e.preventDefault();\n\n    this.props.listenEditFolder(this.props.folderID);\n\n  }\n\n\n  listenDeleteFolder(e) {\n\n    e.preventDefault();\n\n    this.props.deleteFolder(this.props.folderID);\n\n  }\n\n\n  listenCreateNote(e) {\n\n    e.preventDefault();\n\n    this.props.createNote(this.props.folderID);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <a\n            href = \"#\"\n            onClick = { this.listenEditFolder }\n            className = \"edit\"\n        >\n          Edit folder\n        </a>\n\n        <span> | </span>\n\n        <a\n            href = \"#\"\n            onClick = { this.listenDeleteFolder }\n            className = \"delete\"\n        >\n          Delete folder\n        </a>\n\n        <span> | </span>\n\n        <a\n            href = \"#\"\n            onClick = { this.listenCreateNote }\n            className = \"create\"\n        >\n          Create note\n        </a>\n\n      </div>\n\n    )\n  }\n}\n","import React from 'react';\n\nimport FolderMenu from '../folderMenu/folderMenu.js';\n\nimport './folderNotePair.css';\n\n\n\nexport default class FolderNotePair extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      selectedFolderID: null,\n\n      folderIDToEdit: null,\n\n      noteIDToEdit: null\n\n    }\n\n    this.handleFolderLink = this.handleFolderLink.bind(this);\n\n    this.handleNoteLink = this.handleNoteLink.bind(this);\n\n    this.handleEditFolderClick = this.handleEditFolderClick.bind(this);\n\n    this.listenEditFolderEnter = this.listenEditFolderEnter.bind(this);\n\n    this.createNote = this.createNote.bind(this);\n\n\n  }\n\n  createNote(folderID) {\n\n    this.setState({selectedFolderID: null});\n\n    this.props.createNote(folderID);\n  }\n\n\n  handleEditFolderClick(folderID) {\n\n    this.setState({ folderIDToEdit: folderID })\n\n  }\n\n\n  handleFolderLink(e) {\n\n    e.preventDefault();\n\n    let folderID = parseInt(e.target.getAttribute( 'data-folderid' ));\n\n    this.setState({ selectedFolderID: folderID });\n\n  }\n\n\n  handleNoteLink(e) {\n\n    e.preventDefault();\n\n    let noteClicked = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    let noteClickedFolder = e.target.getAttribute('data-notefolder');\n\n    this.props.onNoteClick(noteClicked, noteClickedFolder);\n\n  }\n\n\n  listenEditFolderEnter(e) {\n\n    e.preventDefault();\n\n    let newFolderName = e.target.folderEnter.value;\n\n    let folderIDToEdit = this.state.folderIDToEdit;\n\n    e.target.folderEnter.value = '';\n\n    this.props.editFolder(newFolderName, folderIDToEdit);\n\n    this.setState({ folderIDToEdit: null });\n\n  }\n\n\n\n\n  render() {\n\n    let foldersAndNotes = [];\n\n    let items = this.props.items;\n\n    for (let item in items) {\n\n      if (items[item]['folderName'].length === 0) {\n\n        continue;\n\n      } else {\n\n        foldersAndNotes.push(\n\n            <li>\n\n              <div className = \"folderAndNotes\">\n\n              {\n                  this.state.folderIDToEdit === items[item]['folderID'] ? (\n\n                    <form onSubmit={this.listenEditFolderEnter}>\n\n                      <input\n\n                        type = \"text\"\n\n                        name = \"folderEnter\"\n\n                        placeholder = {items[item]['folderName']}\n\n                      / >\n\n                      <input type=\"submit\" style = {{display: \"none\"}} / >\n\n                    </form>\n\n                  ) : (\n\n                    < a href = \"#\"\n\n                      onClick = {this.handleFolderLink}\n\n                      data-folderID = {items[item]['folderID']}\n\n                      className = \"folderName\">\n\n                        {items[item]['folderName']}\n\n                    </ a >\n                  )\n\n              }\n\n              {\n                this.state.folderIDToEdit === null &&\n\n                this.state.selectedFolderID === items[item]['folderID'] ? (\n\n\n                  < FolderMenu\n\n                    folderID = {items[item]['folderID']} deleteFolder = {this.props.deleteFolder}\n\n                    listenEditFolder = {this.handleEditFolderClick}\n\n                    createNote = {this.createNote}\n\n                  / >\n\n                ) :\n\n                (\n                  <p>\n                  </p>\n                )\n\n              }\n              </div>\n            </li>\n\n        )\n\n        for (let itr = 0; itr < items[item]['notes'].length; itr++) {\n\n          if (items[item]['notes'][itr]['noteID'] !== null) {\n\n            foldersAndNotes.push(\n\n              < li className = \"note\" >\n\n                {\n\n                    < a href = \"#\"\n\n                      onClick = { this.handleNoteLink }\n\n                      data-noteid = {items[item]['notes'][itr]['noteID']}\n\n                      data-notefolder = {items[item]['notes'][itr]['noteFolder']}\n\n                      className = \"notes\"\n\n                    >\n\n                        {items[item]['notes'][itr]['noteName']}\n\n                    < / a >\n\n                }\n\n              </li>\n\n            )\n          }\n        }\n      }\n    }\n\n\n    return (\n\n      <div>\n\n        < ul className = \"listStyle\" >\n\n          {foldersAndNotes}\n\n        < / ul >\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Note from '../note/note.js';\n\nimport FolderNotePair from '../folderNotePair/folderNotePair.js';\n\nimport './tableTop.css';\n\n\n\n\n\nexport default class TableTop extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      folderIDForNoteCreation: null,\n\n      selectedNoteID: null,\n\n      noteIDToEdit: null,\n\n      noteNameIDToEdit: null,\n\n      value: \"\"\n    }\n\n    this.editFolder = this.editFolder.bind(this);\n\n    this.deleteFolder = this.deleteFolder.bind(this);\n\n    this.createNote = this.createNote.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.onButtonClick = this.onButtonClick.bind(this);\n\n    this.onNoteClick = this.onNoteClick.bind(this);\n\n    this.combineFolderIDNoteDetail = this.combineFolderIDNoteDetail.bind(this);\n\n    this.handleNoteTextLink = this.handleNoteTextLink.bind(this);\n\n    this.handleNoteNameLink = this.handleNoteNameLink.bind(this);\n\n    this.listenEditNote = this.listenEditNote.bind(this);\n\n    this.listenDeleteNote = this.listenDeleteNote.bind(this);\n\n    this.listenEditNoteName = this.listenEditNoteName.bind(this);\n  }\n\n\n  componentDidMount() {\n\n    this.props.listenForTableTopReady();\n\n  }\n\n  handleChange(e) {\n\n    this.setState( { value: e.target.value, folderIDForNoteCreation: null } ) ;\n\n  }\n\n\n  handleSubmit(e) {\n\n    e.preventDefault();\n\n    let data = [];\n\n    data.push(e.target.folder.value);\n\n    e.target.folder.value = '';\n\n    this.props.createFolder(data);\n\n    this.setState( { folderIDForNoteCreation: null } ) ;\n\n  }\n\n\n  editFolder(newFolderName, folderIDToEdit) {\n\n    this.setState( { folderIDForNoteCreation: null } ) ;\n\n    this.props.editFolder(newFolderName, folderIDToEdit);\n\n  }\n\n\n  deleteFolder(folderID) {\n\n    this.setState( {folderIDForNoteCreation: null, selectedNoteID: null } ) ;\n\n    this.props.deleteFolder(folderID);\n\n  }\n\n\n  onButtonClick(e) {\n\n    e.preventDefault();\n\n    this.props.onLogoutClick();\n\n    this.setState( { folderIDForNoteCreation: null } ) ;\n\n  }\n\n\n  createNote(folderID) {\n\n    this.setState( { folderIDForNoteCreation: folderID, selectedNoteID: null } );\n\n  }\n\n\n  onNoteClick(noteClicked, noteClickedFolder) {\n\n    this.setState({\n\n      selectedNoteID: noteClicked,\n\n      folderIDForNoteCreation: null,\n\n    })\n  }\n\n\n  noteName() {\n\n    let data = this.props.foldersAndNotesToLoad;\n\n    let noteNameToLoad = [];\n\n    if (data === undefined || data[0] === undefined) {\n\n      return null;\n\n    }\n\n\n    for (let folder in data) {\n\n      for (let itr in data[folder][ 'notes' ]) {\n\n        if (data[folder][ 'notes' ][itr][ 'noteID' ] === this.state.selectedNoteID && this.state.selectedNoteID !== null) {\n\n          noteNameToLoad.push(\n\n            <p>\n\n              {\n\n                this.state.noteNameIDToEdit === data[folder][ 'notes' ][itr][ 'noteID' ] ? (\n\n                  <form onSubmit = {this.handleNoteNameLink}>\n\n                    <input\n\n                      type = \"text\"\n\n                      name = \"noteNameEnter\"\n\n                      placeholder = {data[folder][ 'notes' ][itr][ 'noteName' ]}\n\n                    / >\n\n                    <input type = \"submit\" style = {{ display: \"none\" }} / >\n\n                  </form>\n\n                ) : (\n\n                  <div>\n                    <center>\n                    < a href = \"#\"\n\n                      onClick = { this.listenEditNoteName }\n\n                      data-noteid = {data[folder][ 'notes' ][itr][ 'noteID' ]}\n\n                      data-notefolder = {data[folder][ 'notes' ][itr][ 'noteFolder' ]}\n\n                      className = \"noteView\"\n\n                    >\n\n                      {data[folder][ 'notes' ][itr][ 'noteName' ]}\n\n                    </a>\n                    </center>\n\n                    <br/><br/>\n\n                  </div>\n\n                )\n              }\n\n            </p>\n          )\n        }\n      }\n\n    }\n\n    return noteNameToLoad;\n  }\n\n\n  noteContent() {\n\n    let valueToBe;\n\n    let data = this.props.foldersAndNotesToLoad;\n\n    let noteToLoad = [];\n\n    if (data === undefined || data[0] === undefined) {\n\n      return null;\n\n    }\n\n    for (let folder in data) {\n\n      for (let itr in data[folder][ 'notes' ]) {\n\n        if (data[folder][ 'notes' ][itr][ 'noteID' ] === this.state.selectedNoteID && this.state.selectedNoteID !== null) {\n\n          noteToLoad.push(\n\n            <p >\n\n              {\n\n                this.state.noteIDToEdit === data[folder][ 'notes' ][itr][ 'noteID' ] ? (\n\n                  <form onSubmit = {this.handleNoteTextLink}>\n\n                    <textarea\n\n                      type = \"text\"\n\n                      name = \"noteEnter\"\n\n                      placeholder = {data[folder][ 'notes' ][itr][ 'noteText' ]}\n\n                      value = {this.state.value}\n\n                      onChange = {this.handleChange}\n\n                    / >\n\n                    <br/>\n                    <br/>\n\n                    <input type = \"submit\"  / >\n\n                  </form>\n\n                ) : (\n\n                  <div className = \"noteDisplayed\">\n\n                    < a href = \"#\"\n\n                      onClick = { this.listenEditNote }\n\n                      data-noteid = {data[folder][ 'notes' ][itr][ 'noteID' ]}\n\n                      data-notefolder = {data[folder][ 'notes' ][itr][ 'noteFolder' ]}\n\n                      className = \"noteTextView\"\n\n                    >\n\n                      {data[folder][ 'notes' ][itr][ 'noteText' ]}\n\n                    </a>\n\n                    <br/><br/>\n\n                    < a href = \"#\"\n\n                      onClick = { this.listenDeleteNote }\n\n                      data-noteid = {data[folder][ 'notes' ][itr][ 'noteID' ]}\n\n                      className = \"noteDelete\"\n\n                    >\n\n                    <br/>\n                    <br/>\n\n                    Delete note\n\n                    </a>\n\n                  </div>\n\n                )\n              }\n\n            </p>\n          )\n        }\n      }\n\n    }\n\n    return noteToLoad;\n  }\n\n\n\n  listenEditNote(e) {\n\n    e.preventDefault();\n\n    let noteID = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    let data = this.props.foldersAndNotesToLoad;\n\n    let valueTB;\n\n    for (let folder in data) {\n\n      for (let itr in data[folder][ 'notes' ]) {\n\n        if (noteID === data[folder][ 'notes' ][itr][ 'noteID' ]) {\n\n          valueTB = data[folder][ 'notes' ][itr][ 'noteText' ];\n        }\n      }\n    }\n\n    this.setState( { noteIDToEdit: noteID, value: valueTB } )\n\n  }\n\n\n  listenEditNoteName(e) {\n\n    e.preventDefault();\n\n    let noteID = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    this.setState( {noteNameIDToEdit: noteID } )\n\n  }\n\n\n  handleNoteTextLink(e) {\n\n    e.preventDefault();\n\n    let noteText = e.target.noteEnter.value;\n\n    e.target.noteEnter.value = '';\n\n    this.props.editNote(noteText, this.state.noteIDToEdit);\n\n    this.setState( { noteIDToEdit: null } );\n\n  }\n\n\n  handleNoteNameLink(e) {\n\n    e.preventDefault();\n\n    let noteName = e.target.noteNameEnter.value;\n\n    e.target.noteNameEnter.value = '';\n\n    this.props.editNoteName(noteName, this.state.noteNameIDToEdit);\n\n    this.setState( { noteNameIDToEdit: null } );\n\n  }\n\n  combineFolderIDNoteDetail(noteDetail) {\n\n    if (this.state.folderIDForNoteCreation !== null) {\n\n      let idAndDetail = [this.state.folderIDForNoteCreation, noteDetail];\n\n      this.props.noteDetail(idAndDetail);\n\n      this.setState( { folderIDForNoteCreation: null });\n    }\n  }\n\n\n  listenDeleteNote(e) {\n\n    e.preventDefault();\n\n    let noteID = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    this.props.deleteNote(noteID);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n\n        <div className = \"header\">\n          <Link\n\n              to = '/account'\n              className = \"accountLink\"\n          >\n            Account\n          </Link>\n\n          <button\n            type = 'submit'\n            onClick = { this.onButtonClick }\n            className = \"logOutButton\"\n          >Log out\n          </button>\n        </div>\n\n\n        <h1 className = \"h1\">Table Top</h1>\n\n\n        <div className = \"container\">\n        <br/>\n          <div className = \"sidebar\">\n\n            <form onSubmit = { this.handleSubmit } >\n\n              <label>Enter folder name: </label>\n\n              <input type = \"text\" name = \"folder\" />\n\n              <br/>\n\n              <input className = \"buttonToHide\" type = \"submit\" value = \"Submit\"/>\n\n            </form>\n\n\n\n            < FolderNotePair\n\n              createNote = { this.createNote }\n\n              editFolder = { this.editFolder }\n\n              editNote = { this.editNote }\n\n              deleteFolder = { this.deleteFolder }\n\n              items = { this.props.foldersAndNotesToLoad }\n\n              onNoteClick = { this.onNoteClick }\n\n            / >\n          </div>\n\n          <div className = \"textview\">\n\n            <h2>Post title</h2>\n\n            {\n\n              this.state.folderIDForNoteCreation !== null\n\n              ?\n\n                < Note\n                  noteDetail = { this.combineFolderIDNoteDetail }\n                / >\n\n              :\n\n              <div>\n              </div>\n\n            }\n\n            <br/>\n            <br/>\n\n\n            { this.noteName() }\n\n            { this.noteContent() }\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './account.css';\n\n\nexport default class Account extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    items.push(e.target.nameToAdd.value);\n\n    items.push(e.target.pwToAdd.value);\n\n    e.target.nameToAdd.value = '';\n\n    e.target.pwToAdd.value = '';\n\n    this.props.onAddItems(items);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div >\n\n        <div className = \"header\" >\n          <Link to = '/tableTop' className = \"tableTopLink\" >\n\n            Table Top\n\n          </Link>\n        </div>\n\n        <h1>Account</h1>\n\n        <div className = \"accountPageStyle\">\n\n          <br/>\n\n          <p>Enter your username and password to delete your account</p>\n\n          <form onSubmit = { this.onSubmitForm } >\n\n            <label>\n\n              Name:\n\n              <input\n                    type = \"text\"\n                    placeholder = 'User Name'\n                    name = 'nameToAdd'\n                    className = \"nameInput\"\n              />\n\n            </label>\n\n            <br/>\n            <br/>\n\n            <label>\n\n              Password:\n\n              <input\n                      type = \"text\"\n                      placeholder = 'Secret123!@#'\n                      name = 'pwToAdd'\n                      className = \"passwordInput\"\n              />\n\n            </label>\n\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n            <button type = 'submit'>Enter</button>\n\n          </form>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport Landing from './landing/landing.js';\n\nimport Registration from './registration/registration.js';\n\nimport TableTop from './tableTop/tableTop.js';\n\nimport Account from './account/account.js';\n\nimport './App.css';\n\n\n// const baseURL = 'http://localhost:8000';\nconst baseURL = 'https://radiant-thicket-42053.herokuapp.com'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      username: undefined,\n\n      password: undefined,\n\n      authToken: undefined,\n\n      accountDeleted: false,\n\n      registrationMessage: undefined,\n\n      foldersAndNotes: undefined,\n\n      notesToView: undefined,\n\n      folderCreated: false,\n\n      folderEdited: false,\n\n      folderDeleted: false,\n\n      noteCreated: false,\n\n      noteViewed: false,\n\n      notes: undefined,\n\n      noteEdited: false,\n\n      noteNameEdited: false,\n\n      noteDeleted: false,\n\n      userID: undefined\n\n    };\n\n\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.handleRegistration = this.handleRegistration.bind(this);\n\n    this.handleAccount = this.handleAccount.bind(this);\n\n    this.handleTableTopReady = this.handleTableTopReady.bind(this);\n\n    this.handleCreateFolder = this.handleCreateFolder.bind(this);\n\n    this.handleEditFolder = this.handleEditFolder.bind(this);\n\n    this.handleDeleteFolder = this.handleDeleteFolder.bind(this);\n\n    this.handleCreateNote = this.handleCreateNote.bind(this);\n\n    this.handleViewNote = this.handleViewNote.bind(this);\n\n    this.handleEditNote = this.handleEditNote.bind(this);\n\n    this.handleEditNoteName = this.handleEditNoteName.bind(this);\n\n    this.handleDeleteNote = this.handleDeleteNote.bind(this);\n\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n\n  makeBasicAuthToken(userName, password) {\n\n    return window.btoa(`${userName}:${password}`)\n\n  }\n\n\n  handleLogin(data) {\n\n    let authToken = this.makeBasicAuthToken(data[0], data[1]);\n\n    let url = `${baseURL}/login`;\n\n    let userName = data[0];\n\n    let password = data[1];\n\n    if (userName === \"\" || password === \"\") {\n\n      console.log(\"Must enter user information\");\n\n    } else {\n\n      let postBody = {userName, password, authToken};\n\n      let options = {\n\n        method: 'POST',\n\n        body: JSON.stringify(postBody),\n\n        headers: {\n\n          \"Content-Type\": \"application/json\"\n\n        }\n\n      };\n\n\n      fetch(url, options)\n\n        .then( res => {\n\n          if (!res.ok) {\n\n            throw new Error( 'An error occurred' );\n\n          };\n\n          this.setState({\n\n            authToken: authToken,\n\n          });\n\n          this.props.history.push( \"/tableTop\" );\n\n        })\n\n    }\n  }\n\n\n\n\n\n  handleLogout() {\n\n    this.setState({\n\n      authToken: undefined\n\n    });\n  }\n\n\n\n\n\n  handleRegistration(data) {\n\n    let url = `${baseURL}/registration`;\n\n    let userName = data[0];\n\n    let password = data[1];\n\n    let postBody = {userName, password};\n\n    let options = {\n\n      method: 'POST',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          console.log(\"Error registering user\")\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          registrationMessage: data.registrationMessage,\n\n        });\n      })\n  }\n\n\n\n\n\n  handleCreateFolder(data) {\n\n    let url = `${baseURL}/createFolder`;\n\n    let folderName = data[0];\n\n    let postBody = {folderName};\n\n    let options = {\n\n      method: 'POST',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Authorization\": this.state.authToken,\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          folderCreated: true\n\n        });\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n\n  handleEditFolder(newFolderName, folderID) {\n\n    let postBody = {newFolderName, folderID};\n\n    let url = `${baseURL}/editFolder/${folderID}`;\n\n    let options = {\n\n      method: 'PATCH',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then (res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then(data =>\n\n        {\n\n        this.setState({\n\n          folderEdited: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n\n  handleDeleteFolder(folderID) {\n\n    let postBody = {folderID};\n\n    let url = `${baseURL}/deleteFolder`;\n\n    let options = {\n\n      method: 'DELETE',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then (res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred')\n\n        }\n\n        return res.json()\n\n      })\n\n      .then( data =>\n\n        {\n\n        this.setState({\n\n          folderDeleted: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n\n  handleCreateNote(data) {\n\n    let folderID = data[0];\n\n    let noteName = data[1][0];\n\n    let noteText = data[1][1];\n\n    let postBody = {folderID, noteName, noteText};\n\n    let url = `${baseURL}/createNote`;\n\n    let options = {\n\n      method: 'POST',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data =>\n\n        {\n\n        this.setState({\n\n          noteCreated: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n   }\n\n\n\n\n\n  handleViewNote(noteName) {\n\n    let url = `${baseURL}/viewNote/${noteName}`;\n\n    let options = {\n\n      method: 'GET',\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then(data =>\n\n        {\n\n        this.setState({\n\n          noteToView: data[0]\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n\n  handleEditNote(noteText, noteID) {\n\n    let postBody = {noteText, noteID};\n\n    let url = `${baseURL}/editNote`;\n\n    let options = {\n\n      method: 'PATCH',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json()\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          noteEdited: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n  handleEditNoteName(noteName, noteID) {\n\n    let postBody = {noteName, noteID};\n\n    let url = `${baseURL}/editNoteName`;\n\n    let options = {\n\n      method: 'PATCH',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json()\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          noteNameEdited: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n  handleDeleteNote(noteID) {\n\n    let postBody = {noteID};\n\n    let url = `${baseURL}/deleteNote`;\n\n    let options = {\n\n      method: 'DELETE',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          noteDeleted: data.noteDeleted\n\n        });\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n\n  handleAccount(data) {\n\n    let url = `${baseURL}/deleteAccount`;\n\n    let userName = data[0];\n\n    let password = data[1];\n\n    let postBody = {userName, password};\n\n    let options = {\n\n      method: 'DELETE',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          accountDeleted: true,\n\n          authToken: undefined\n\n        })\n\n        this.handleLogout();\n\n      })\n  }\n\n\n\n\n\n  handleTableTopReady() {\n\n    let url = `${baseURL}/tableTopReady`;\n\n    let options = {\n\n      method: 'GET',\n\n      headers: {\n\n        \"Authorization\": this.state.authToken,\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState( {\n\n          foldersAndNotes: data\n\n        })\n      })\n  }\n\n\n\n\n\n  render() {\n\n    if (this.state.authToken === undefined) {\n\n        return (\n\n          <div className = 'App'>\n\n            <Switch>\n\n                <Route path = '/registration' >\n\n                  <Registration onAddItems = { this.handleRegistration } />\n\n                </Route>\n\n\n                <Route >\n\n                  <Landing onAddItems = { this.handleLogin } />\n\n                </Route>\n\n              </Switch>\n\n          </div>\n      )\n\n    } else {\n\n      return (\n\n        <div className='App'>\n\n          <Switch>\n\n            <Route\n                    exact path = '/account'\n\n                    render = { ({ history }) => {\n\n                      return <Account onAddItems = { this.handleAccount } />\n\n                              }} >\n\n            </Route>\n\n\n            <Route>\n\n              <TableTop\n\n                          listenForTableTopReady = { this.handleTableTopReady }\n\n                          foldersAndNotesToLoad = { this.state.foldersAndNotes }\n\n                          createFolder = { this.handleCreateFolder }\n\n                          editFolder = { this.handleEditFolder }\n\n                          deleteFolder = { this.handleDeleteFolder }\n\n                          noteDetail = { this.handleCreateNote }\n\n                          viewNote = { this.handleViewNote }\n\n                          noteToView = { this.state.noteToView }\n\n                          editNote = { this.handleEditNote }\n\n                          editNoteName = {this.handleEditNoteName }\n\n                          deleteNote = { this.handleDeleteNote }\n\n                          onLogoutClick = { this.handleLogout } />\n\n            </Route>\n\n          </Switch>\n\n        </div>\n\n      )\n    }\n  }\n}\n\nexport default withRouter(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}