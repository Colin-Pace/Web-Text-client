{"version":3,"sources":["landing/landing.js","registration/registration.js","note/note.js","folderMenu/folderMenu.js","folderNotePair/folderNotePair.js","tableTop/tableTop.js","account/account.js","App.js","index.js"],"names":["Landing","props","onSubmitForm","bind","spinner","React","createRef","unsuccessfulLogin","e","preventDefault","items","push","target","nameToAdd","value","pwToAdd","this","onAddItems","current","style","display","undefined","className","onSubmit","type","placeholder","name","aria-required","aria-label","aria-describedby","autocomplete","to","id","ref","Component","Registration","state","message","handleChange","checkPassword","password","needsLower","needsUpper","needsNumber","needsSpecial","tempMessage","test","includes","setState","isValidPassword","length","hasEnteredPassword","inputBoxClass","join","onChange","Note","noteName","noteText","console","log","noteDetail","FolderMenu","listenEditFolder","listenDeleteFolder","listenCreateNote","folderID","deleteFolder","createNote","href","onClick","FolderNotePair","selectedFolderID","folderIDToEdit","noteIDToEdit","handleFolderLink","handleNoteLink","handleEditFolderClick","listenEditFolderEnter","parseInt","getAttribute","noteClicked","noteClickedFolder","onNoteClick","newFolderName","folderEnter","editFolder","foldersAndNotes","item","data-folderID","itr","data-noteid","data-notefolder","TableTop","folderIDForNoteCreation","selectedNoteID","noteNameIDToEdit","handleSubmit","onButtonClick","combineFolderIDNoteDetail","handleNoteTextLink","handleNoteNameLink","listenEditNote","listenDeleteNote","listenEditNoteName","listenForTableTopReady","data","folder","createFolder","onLogoutClick","foldersAndNotesToLoad","noteNameToLoad","noteToLoad","valueTB","noteID","noteEnter","editNote","noteNameEnter","editNoteName","idAndDetail","deleteNote","noteContent","Account","baseURL","App","authToken","accountDeleted","registrationMessage","notesToView","folderCreated","folderEdited","folderDeleted","noteCreated","noteViewed","notes","noteEdited","noteNameEdited","noteDeleted","userID","handleLogin","handleRegistration","handleAccount","handleTableTopReady","handleCreateFolder","handleEditFolder","handleDeleteFolder","handleCreateNote","handleViewNote","handleEditNote","handleEditNoteName","handleDeleteNote","handleLogout","userName","window","btoa","makeBasicAuthToken","url","postBody","options","method","body","JSON","stringify","headers","fetch","then","res","ok","history","alert","Error","catch","err","folderName","json","noteToView","path","exact","render","viewNote","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c27166dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './landing.css';\n\nimport { Link } from 'react-router-dom';\n\n\n\nexport default class Landing extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n    this.spinner = React.createRef();\n\n    this.unsuccessfulLogin = this.props.unsuccessfulLogin;\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    items.push(e.target.nameToAdd.value);\n\n    items.push(e.target.pwToAdd.value);\n\n    e.target.nameToAdd.value = '';\n\n    e.target.pwToAdd.value = '';\n\n    this.props.onAddItems(items);\n\n    const spinner = this.spinner.current;\n\n    spinner.style.display = 'initial';\n\n  }\n\n\n  render() {\n\n    if (this.props.unsuccessfulLogin !== undefined) {\n\n      const spinner = this.spinner.current;\n\n      if (spinner !== null) spinner.style.display = 'none';\n\n    }\n\n    return (\n\n      <div>\n\n        <div className = \"loginNavbar\">\n\n          <form\n\n            onSubmit = { this.onSubmitForm }\n            className = \"nonMobileForm\"\n\n          >\n\n            <div className = \"form\">\n\n              <input\n\n                type = \"text\"\n                placeholder = 'User Name'\n                name = 'nameToAdd'\n                className = \"inputOne\"\n                aria-required=\"true\"\n                aria-label=\"User name for login\"\n                aria-describedby=\"landingInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <input\n\n                type = \"text\"\n                placeholder = 'Password123!@#'\n                name = 'pwToAdd'\n                className = \"inputTwo\"\n                aria-required=\"true\"\n                aria-label=\"Password for login\"\n                aria-describedby=\"landingInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <button type = 'submit'>Enter</button>\n\n            </div>\n\n          </form>\n\n          <Link\n\n            to = '/registration'\n            className = 'registration'\n\n          >\n\n            <span className = \"regText\">Registration</span>\n\n          </Link>\n\n        </div>\n\n        <div className = \"page\">\n\n          <h1>Web Text</h1>\n\n          <p\n\n            className = \"instructions\"\n            id = \"landingInstructions\"\n\n          >Application instructions: If you have an account, please enter your name and password to go to the table top. There you can enter the name of a folder, select created folders and make posts for them, select posts, and enter post text. If you do not have an account, go to registration to create one. For a demonstration, try the user name \"User Name\" with the password \"Password123!\".</p>\n\n          <div\n\n            id = \"landingLoader\"\n            ref = { this.spinner }\n\n          ></div>\n\n          <form\n\n            onSubmit = { this.onSubmitForm }\n            className = \"mobileLandingForm\"\n\n          >\n\n            <div className = \"mobileInputs\">\n\n              <input\n\n                type = \"text\"\n                placeholder = 'User Name'\n                name = 'nameToAdd'\n                className = \"inputOne\"\n                aria-required=\"true\"\n                aria-label=\"User name for mobile login\"\n                aria-describedby=\"landingInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <input\n\n                type = \"text\"\n                placeholder = 'Password123!@#'\n                name = 'pwToAdd'\n                className = \"inputTwo\"\n                aria-required=\"true\"\n                aria-label=\"Password for mobile login\"\n                aria-describedby=\"landingInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <br/>\n\n              <button type = 'submit'>Enter</button>\n\n            </div>\n\n          </form>\n\n        </div>\n\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Landing from '../landing/landing.js';\n\nimport './registration.css';\n\n\n\n\nexport default class Registration extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n    this.state = {\n\n      value: '',\n\n      message: []\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.checkPassword = this.checkPassword.bind(this);\n\n  }\n\n  checkPassword(password) {\n\n    const REGEX_LOWER =/(?=.*[a-z])[\\S]+/;\n\n    const needsLower = <p className = \"passwordMessage\">* Needed: a lower case letter.</p>\n\n    const REGEX_UPPER = /(?=.*[A-Z])[\\S]+/;\n\n    const needsUpper = <p className = \"passwordMessage\">* Needed: an upper case letter.</p>\n\n    const REGEX_NUMBER = /(?=.*[0-9])[\\S]+/;\n\n    const needsNumber = <p className = \"passwordMessage\">* Needed: a number.</p>\n\n    const REGEX_SPECIAL =/(?=.*[!@#\\$%\\^&])[\\S]+/;\n\n    const needsSpecial = <p className = \"passwordMessage\">* Needed: a special character.</p>\n\n    let tempMessage = [];\n\n    if (!REGEX_LOWER.test(password) && (!tempMessage.includes(needsLower))) {\n\n      tempMessage.push(needsLower);\n\n    }\n\n    if (!REGEX_UPPER.test(password) && (!tempMessage.includes(needsUpper))) {\n\n      tempMessage.push(needsUpper);\n\n    }\n\n    if (!REGEX_NUMBER.test(password) && (!tempMessage.includes(needsNumber))) {\n\n      tempMessage.push(needsNumber);\n\n    }\n\n    if (!REGEX_SPECIAL.test(password) && (!tempMessage.includes(needsSpecial))) {\n\n      tempMessage.push(needsSpecial);\n\n    }\n\n    return tempMessage;\n  }\n\n\n  handleChange(e) {\n\n    this.setState( { value: e.target.value } );\n\n    let message = this.checkPassword(e.target.value);\n\n    this.setState( { message: message } );\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    items.push(e.target.nameToAdd.value);\n\n    items.push(e.target.pwToAdd.value);\n\n    e.target.nameToAdd.value = '';\n\n    e.target.pwToAdd.value = '';\n\n    this.props.onAddItems(items);\n\n  }\n\n\n  render() {\n\n    let isValidPassword = this.state.message.length === 0;\n\n    const hasEnteredPassword = this.state.value.length > 0;\n\n    let inputBoxClass = undefined;\n\n    if (hasEnteredPassword) {\n\n      inputBoxClass = isValidPassword ? \"greenInput\" : \"redInput\";\n\n    }\n\n    return (\n\n      <div >\n\n        <div className = \"showMessage\" >\n\n          { !hasEnteredPassword || isValidPassword ? \"\" : this.state.message }\n\n        </div>\n\n        <div className = \"regNavbar\" >\n\n          <form\n\n            onSubmit = { this.onSubmitForm }\n            className = \"regNonMobileForm\"\n\n          >\n\n            <div className = \"regForm\">\n\n              <input\n\n                type = \"text\"\n                placeholder = 'User Name'\n                name = 'nameToAdd'\n                className = \"regInputOne\"\n                aria-required=\"true\"\n                aria-label=\"User name for registration\"\n                aria-describedby=\"registrationInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <input\n\n                type = \"text\"\n                placeholder = 'Password123!@#'\n                name = 'pwToAdd'\n                className = { [ inputBoxClass, \"regInputTwo\" ].join(\" \") }\n                aria-required=\"true\"\n                aria-label=\"Password for registration\"\n                aria-describedby=\"registrationInstructions\"\n                value = { this.state.value }\n                onChange = { this.handleChange }\n                autocomplete = \"off\"\n\n              />\n\n              <button type = 'submit'>Enter</button>\n\n            </div>\n\n          </form>\n\n          <Link\n\n            to = '/landing'\n            className = 'landingLink'\n\n          >\n\n            <span className = \"landingLinkText\">Login</span>\n\n          </Link>\n\n        </div>\n\n        <div className = \"regPage\">\n\n          <h1 className = \"regHeadingOne\">Registration</h1>\n\n          <p\n\n            className = \"regInstructions\"\n            id = \"registrationInstructions\"\n\n          >In order to register, please enter a user name and a password. The password should be longer than eight characters long. Also it must contain one upper case and one lower case character, one number, and a special character.</p>\n\n          <form onSubmit = { this.onSubmitForm } >\n\n            <div className = \"regMobileInputs\">\n\n              <input\n\n                type = \"text\"\n                placeholder = 'User Name'\n                name = 'nameToAdd'\n                className = \"regInputOne\"\n                aria-required=\"true\"\n                aria-label=\"User name for mobile registration\"\n                aria-describedby=\"registrationInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <input\n\n                type = \"text\"\n                placeholder = 'Password123!@#'\n                name = 'pwToAdd'\n                className = \"regInputTwo\"\n                aria-required=\"true\"\n                aria-label=\"Password for mobile registration\"\n                aria-describedby=\"registrationInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <button\n\n                type = 'submit'\n                className = \"regButton\"\n\n              >Enter</button>\n\n            </div>\n\n        </form>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './note.css';\n\n\n\nexport default class Note extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    if (e.target.noteName.value === \"\" || e.target.noteText.value === \"\") {\n\n      console.log(\"Cannot create an empty note\");\n\n    } else {\n\n      items.push(e.target.noteName.value);\n\n      items.push(e.target.noteText.value);\n\n      e.target.noteName.value = \"\";\n\n      e.target.noteText.value = \"\";\n\n      this.props.noteDetail(items);\n\n    }\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <form onSubmit = { this.onSubmitForm } >\n\n          <span className = \"noteForm\">\n\n            <input\n\n              type = \"text\"\n              placeholder = 'Weather'\n              name = 'noteName'\n              className = \"noteTitle\"\n              aria-required=\"true\"\n              aria-label=\"Post name input\"\n\n            / >\n \n            <textarea\n\n                name = \"noteText\"\n                placeholder = 'Enter note text here'\n\n            >\n\n            </textarea>\n\n            < input\n\n                type = \"submit\"\n                className = \"submit\"\n                aria-required=\"true\"\n                aria-label=\"Post name input button\"\n\n            / >\n\n          </span>\n\n        </form>\n\n      </div>\n\n    )\n  }\n}\n","import React from 'react';\n\nimport './folderMenu.css'\n\n\n\nexport default class FolderMenu extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.listenEditFolder = this.listenEditFolder.bind(this);\n\n    this.listenDeleteFolder = this.listenDeleteFolder.bind(this);\n\n    this.listenCreateNote = this.listenCreateNote.bind(this);\n\n  }\n\n\n  listenEditFolder(e) {\n\n    e.preventDefault();\n\n    this.props.listenEditFolder(this.props.folderID);\n\n  }\n\n\n  listenDeleteFolder(e) {\n\n    e.preventDefault();\n\n    this.props.deleteFolder(this.props.folderID);\n\n  }\n\n\n  listenCreateNote(e) {\n\n    e.preventDefault();\n\n    this.props.createNote(this.props.folderID);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <a\n            href = \"#\"\n            onClick = { this.listenEditFolder }\n            className = \"edit\"\n        >\n\n          <span className = \"editFolderText\">Edit folder</span>\n\n        </a>\n\n        <span> | </span>\n\n        <a\n            href = \"#\"\n            onClick = { this.listenDeleteFolder }\n            className = \"delete\"\n        >\n\n          <span className = \"deleteFolderText\">Delete folder</span>\n\n        </a>\n\n        <span> | </span>\n\n        <a\n            href = \"#\"\n            onClick = { this.listenCreateNote }\n            className = \"create\"\n        >\n\n        <span className = \"createNoteText\">Create post</span>\n\n        </a>\n\n      </div>\n\n    )\n  }\n}\n","import React from 'react';\n\nimport FolderMenu from '../folderMenu/folderMenu.js';\n\nimport './folderNotePair.css';\n\n\n\nexport default class FolderNotePair extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      selectedFolderID: null,\n\n      folderIDToEdit: null,\n\n      noteIDToEdit: null\n\n    }\n\n    this.handleFolderLink = this.handleFolderLink.bind(this);\n\n    this.handleNoteLink = this.handleNoteLink.bind(this);\n\n    this.handleEditFolderClick = this.handleEditFolderClick.bind(this);\n\n    this.listenEditFolderEnter = this.listenEditFolderEnter.bind(this);\n\n    this.createNote = this.createNote.bind(this);\n\n\n  }\n\n  createNote(folderID) {\n\n    this.setState({selectedFolderID: null});\n\n    this.props.createNote(folderID);\n  }\n\n\n  handleEditFolderClick(folderID) {\n\n    this.setState({ folderIDToEdit: folderID })\n\n  }\n\n\n  handleFolderLink(e) {\n\n    e.preventDefault();\n\n    let folderID = parseInt(e.target.getAttribute( 'data-folderid' ));\n\n    this.setState({ selectedFolderID: folderID });\n\n  }\n\n\n  handleNoteLink(e) {\n\n    e.preventDefault();\n\n    let noteClicked = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    let noteClickedFolder = e.target.getAttribute('data-notefolder');\n\n    this.props.onNoteClick(noteClicked, noteClickedFolder);\n\n  }\n\n\n  listenEditFolderEnter(e) {\n\n    e.preventDefault();\n\n    let newFolderName = e.target.folderEnter.value;\n\n    let folderIDToEdit = this.state.folderIDToEdit;\n\n    e.target.folderEnter.value = '';\n\n    this.props.editFolder(newFolderName, folderIDToEdit);\n\n    this.setState({ folderIDToEdit: null });\n\n  }\n\n\n  render() {\n\n    let foldersAndNotes = [];\n\n    let items = this.props.items;\n\n    for (let item in items) {\n\n      if (items[item]['folderName'].length === 0) {\n\n        continue;\n\n      } else {\n\n        foldersAndNotes.push(\n\n            <li>\n\n              <div className = \"folderAndNotes\">\n\n              {\n                  this.state.folderIDToEdit === items[item]['folderID'] ? (\n\n                    <form onSubmit = { this.listenEditFolderEnter } >\n\n                      <input\n\n                        type = \"text\"\n                        name = \"folderEnter\"\n                        placeholder = { items[item]['folderName'] }\n                        aria-required=\"true\"\n                        aria-label=\"Edit folder name\"\n\n                      / >\n\n                      <input type=\"submit\" style = { { display: \"none\" } } / >\n\n                    </form>\n\n                  ) : (\n\n                    < a href = \"#\"\n\n                      onClick = { this.handleFolderLink }\n                      data-folderID = { items[item]['folderID'] }\n                      className = \"folderName\">\n\n                        { items[item]['folderName'] }\n\n                    </ a >\n                  )\n\n              }\n\n              {\n                this.state.folderIDToEdit === null &&\n\n                this.state.selectedFolderID === items[item]['folderID'] ? (\n\n\n                  < FolderMenu\n\n                    folderID = { items[item]['folderID'] } deleteFolder = { this.props.deleteFolder }\n                    listenEditFolder = { this.handleEditFolderClick }\n                    createNote = { this.createNote }\n\n                  / >\n\n                ) :\n\n                (\n                  <span>\n                  </span>\n                )\n\n              }\n              </div>\n\n            </li>\n\n        )\n\n        for (let itr = 0; itr < items[item]['notes'].length; itr++) {\n\n          if (items[item]['notes'][itr]['noteID'] !== null) {\n\n            foldersAndNotes.push(\n\n              < li className = \"note\" >\n\n                {\n\n                    < a href = \"#\"\n\n                      onClick = { this.handleNoteLink }\n                      data-noteid = { items[item]['notes'][itr]['noteID'] }\n                      data-notefolder = { items[item]['notes'][itr]['noteFolder'] }\n                      className = \"notes\"\n\n                    >\n\n                        { items[item]['notes'][itr]['noteName'] }\n\n                    < / a >\n\n                }\n\n              </li>\n\n            )\n          }\n        }\n      }\n    }\n\n\n    return (\n\n      <div>\n\n        < ul className = \"listStyle\" >\n\n          { foldersAndNotes }\n\n        < / ul >\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Note from '../note/note.js';\n\nimport FolderNotePair from '../folderNotePair/folderNotePair.js';\n\nimport './tableTop.css';\n\n\n\nexport default class TableTop extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      folderIDForNoteCreation: null,\n\n      selectedNoteID: null,\n\n      noteIDToEdit: null,\n\n      noteNameIDToEdit: null,\n\n      value: \"\"\n    }\n\n    this.editFolder = this.editFolder.bind(this);\n\n    this.deleteFolder = this.deleteFolder.bind(this);\n\n    this.createNote = this.createNote.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.onButtonClick = this.onButtonClick.bind(this);\n\n    this.onNoteClick = this.onNoteClick.bind(this);\n\n    this.combineFolderIDNoteDetail = this.combineFolderIDNoteDetail.bind(this);\n\n    this.handleNoteTextLink = this.handleNoteTextLink.bind(this);\n\n    this.handleNoteNameLink = this.handleNoteNameLink.bind(this);\n\n    this.listenEditNote = this.listenEditNote.bind(this);\n\n    this.listenDeleteNote = this.listenDeleteNote.bind(this);\n\n    this.listenEditNoteName = this.listenEditNoteName.bind(this);\n  }\n\n\n  componentDidMount() {\n\n    this.props.listenForTableTopReady();\n\n  }\n\n\n  handleChange(e) {\n\n    this.setState( { value: e.target.value, folderIDForNoteCreation: null } ) ;\n\n  }\n\n\n  handleSubmit(e) {\n\n    e.preventDefault();\n\n    let data = [];\n\n    data.push(e.target.folder.value);\n\n    e.target.folder.value = '';\n\n    this.props.createFolder(data);\n\n    this.setState( { folderIDForNoteCreation: null } ) ;\n\n  }\n\n\n  editFolder(newFolderName, folderIDToEdit) {\n\n    this.setState( { folderIDForNoteCreation: null } ) ;\n\n    this.props.editFolder(newFolderName, folderIDToEdit);\n\n  }\n\n\n  deleteFolder(folderID) {\n\n    this.setState( {folderIDForNoteCreation: null, selectedNoteID: null } ) ;\n\n    this.props.deleteFolder(folderID);\n\n  }\n\n\n  onButtonClick(e) {\n\n    e.preventDefault();\n\n    this.props.onLogoutClick();\n\n    this.setState( { folderIDForNoteCreation: null } ) ;\n\n  }\n\n\n  createNote(folderID) {\n\n    this.setState( { folderIDForNoteCreation: folderID, selectedNoteID: null } );\n\n  }\n\n\n  onNoteClick(noteClicked, noteClickedFolder) {\n\n    this.setState({\n\n      selectedNoteID: noteClicked,\n\n      folderIDForNoteCreation: null,\n\n    })\n  }\n\n\n  noteName() {\n\n    let data = this.props.foldersAndNotesToLoad;\n\n    let noteNameToLoad = [];\n\n    if (data === undefined || data[0] === undefined) {\n\n      return null;\n\n    }\n\n    for (let folder in data) {\n\n      for (let itr in data[folder][ 'notes' ]) {\n\n        if (data[folder][ 'notes' ][itr][ 'noteID' ] === this.state.selectedNoteID && this.state.selectedNoteID !== null) {\n\n          noteNameToLoad.push(\n\n            <div>\n\n              {\n\n                this.state.noteNameIDToEdit === data[folder][ 'notes' ][itr][ 'noteID' ] ? (\n\n                  <form onSubmit = { this.handleNoteNameLink } >\n\n                    <input\n\n                      type = \"text\"\n                      name = \"noteNameEnter\"\n                      placeholder = { data[folder][ 'notes' ][itr][ 'noteName' ] }\n                      className = \"postNameLink\"\n                      aria-required=\"true\"\n                      aria-label=\"Edit post name \"\n\n                    / >\n\n                    <input\n\n                        type = \"submit\"\n                        aria-required=\"true\"\n                        aria-label=\"Edit post name keyboard enter\"\n                        style = { { display: \"none\" } }\n\n                    / >\n\n                  </form>\n\n                ) : (\n\n                  < a href = \"#\"\n\n                    onClick = { this.listenEditNoteName }\n                    data-noteid = { data[folder][ 'notes' ][itr][ 'noteID' ] }\n                    data-notefolder = { data[folder][ 'notes' ][itr][ 'noteFolder' ] }\n                    className = \"noteView\"\n\n                  >\n\n                    { data[folder][ 'notes' ][itr][ 'noteName' ] }\n\n                  </a>\n\n                )\n              }\n\n            </div>\n          )\n        }\n      }\n\n    }\n\n    return noteNameToLoad;\n  }\n\n\n  noteContent() {\n\n    let data = this.props.foldersAndNotesToLoad;\n\n    let noteToLoad = [];\n\n    if (data === undefined || data[0] === undefined) {\n\n      return null;\n\n    }\n\n    for (let folder in data) {\n\n      for (let itr in data[folder][ 'notes' ]) {\n\n        if (data[folder][ 'notes' ][itr][ 'noteID' ] === this.state.selectedNoteID && this.state.selectedNoteID !== null) {\n\n          noteToLoad.push(\n\n            <p>\n\n              {\n\n                this.state.noteIDToEdit === data[folder][ 'notes' ][itr][ 'noteID' ] ? (\n\n                  <form onSubmit = { this.handleNoteTextLink } >\n\n                    <textarea\n\n                      type = \"text\"\n                      name = \"noteEnter\"\n                      placeholder = { data[folder][ 'notes' ][itr][ 'noteText' ] }\n                      value = { this.state.value }\n                      onChange = { this.handleChange }\n\n                    / >\n\n                    <br/>\n\n                    <input\n\n                      type = \"submit\"\n                      className = \"noteEnterButton\"\n                      aria-required=\"true\"\n                      aria-label=\"Edit post text\"\n\n                    / >\n\n                  </form>\n\n                ) : (\n\n                  <div className = \"noteDisplayed\">\n\n                    < a href = \"#\"\n\n                      onClick = { this.listenEditNote }\n                      data-noteid = { data[folder][ 'notes' ][itr][ 'noteID' ] }\n                      data-notefolder = { data[folder][ 'notes' ][itr][ 'noteFolder' ] }\n                      className = \"noteTextView\"\n\n                    >\n\n                      { data[folder][ 'notes' ][itr][ 'noteText' ] }\n\n                    </a>\n\n                    <div className = \"postDeleteLink\">\n\n                      < a href = \"#\"\n\n                        onClick = { this.listenDeleteNote }\n                        data-noteid = { data[folder][ 'notes' ][itr][ 'noteID' ] }\n                        className = \"noteDelete\"\n\n                      >\n\n                      Delete note\n\n                      </a>\n\n                    </div>\n\n                  </div>\n\n                )\n              }\n\n            </p>\n          )\n        }\n      }\n\n    }\n\n    return noteToLoad;\n  }\n\n\n\n  listenEditNote(e) {\n\n    e.preventDefault();\n\n    let noteID = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    let data = this.props.foldersAndNotesToLoad;\n\n    let valueTB;\n\n    for (let folder in data) {\n\n      for (let itr in data[folder][ 'notes' ]) {\n\n        if (noteID === data[folder][ 'notes' ][itr][ 'noteID' ]) {\n\n          valueTB = data[folder][ 'notes' ][itr][ 'noteText' ];\n        }\n      }\n    }\n\n    this.setState( { noteIDToEdit: noteID, value: valueTB } )\n\n  }\n\n\n  listenEditNoteName(e) {\n\n    e.preventDefault();\n\n    let noteID = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    this.setState( {noteNameIDToEdit: noteID } )\n\n  }\n\n\n  handleNoteTextLink(e) {\n\n    e.preventDefault();\n\n    let noteText = e.target.noteEnter.value;\n\n    e.target.noteEnter.value = '';\n\n    this.props.editNote(noteText, this.state.noteIDToEdit);\n\n    this.setState( { noteIDToEdit: null } );\n\n  }\n\n\n  handleNoteNameLink(e) {\n\n    e.preventDefault();\n\n    let noteName = e.target.noteNameEnter.value;\n\n    e.target.noteNameEnter.value = '';\n\n    this.props.editNoteName(noteName, this.state.noteNameIDToEdit);\n\n    this.setState( { noteNameIDToEdit: null } );\n\n  }\n\n  combineFolderIDNoteDetail(noteDetail) {\n\n    if (this.state.folderIDForNoteCreation !== null) {\n\n      let idAndDetail = [this.state.folderIDForNoteCreation, noteDetail];\n\n      this.props.noteDetail(idAndDetail);\n\n      this.setState( { folderIDForNoteCreation: null });\n    }\n  }\n\n\n  listenDeleteNote(e) {\n\n    e.preventDefault();\n\n    let noteID = parseInt(e.target.getAttribute( 'data-noteid' ));\n\n    this.props.deleteNote(noteID);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n \n        <div className = \"tableTopNavbar\">\n\n          <button\n\n            type = 'submit'\n            onClick = { this.onButtonClick }\n            className = \"logOutButton\"\n\n          >Logout\n\n          </button>\n\n          <Link\n\n            to = '/account'\n            className = \"accountLink\"\n\n          >\n\n            <span className = \"accountLinkText\">Account</span>\n\n          </Link>\n\n        </div>\n\n        <h1 className = \"tableTopHeading\">Table Top</h1>\n\n        <div className = \"container\">\n\n          <div className = \"sidebar\">\n\n            <form\n\n              onSubmit = { this.handleSubmit }\n              className = \"sidebarInput\"\n\n            >\n\n              <input\n\n                type = \"text\"\n                name = \"folder\"\n                placeholder = \"Enter folder name\"\n                className = \"folderNameInput\"\n                aria-required=\"true\"\n                aria-label=\"Folder name input\"\n\n              />\n\n              <input\n\n                className = \"buttonToHide\"\n                type = \"submit\"\n                value = \"Submit\"\n                aria-required=\"true\"\n                aria-label=\"Folder name input button\"\n\n              />\n\n            </form>\n\n            < FolderNotePair\n\n              createNote = { this.createNote }\n              editFolder = { this.editFolder }\n              editNote = { this.editNote }\n              deleteFolder = { this.deleteFolder }\n              items = { this.props.foldersAndNotesToLoad }\n              onNoteClick = { this.onNoteClick }\n\n            / >\n\n          </div>\n\n          <div className = \"textview\">\n\n            {\n\n              this.state.folderIDForNoteCreation !== null\n\n              &&\n\n                < Note\n\n                  noteDetail = { this.combineFolderIDNoteDetail }\n\n                / >\n\n            }\n\n            { this.noteName() }\n\n            { this.noteContent() }\n\n          </div>\n\n        </div>\n\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './account.css';\n\n\nexport default class Account extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n\n  }\n\n\n  onSubmitForm(e) {\n\n    e.preventDefault();\n\n    let items = [];\n\n    items.push(e.target.nameToAdd.value);\n\n    items.push(e.target.pwToAdd.value);\n\n    e.target.nameToAdd.value = '';\n\n    e.target.pwToAdd.value = '';\n\n    this.props.onAddItems(items);\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div >\n\n        <div className = \"accountNavbar\" >\n\n          <form\n\n            onSubmit = { this.onSubmitForm }\n            className = \"nonMobileAccountFormOne\"\n\n          >\n\n            <div className = \"nonMobileAccountFormTwo\">\n\n              <input\n\n                type = \"text\"\n                placeholder = 'User Name'\n                name = 'nameToAdd'\n                className = \"accountInputOne\"\n                aria-required=\"true\"\n                aria-label=\"User name for account deletion\"\n                aria-describedby=\"accountInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <input\n\n                type = \"text\"\n                placeholder = 'Password123!@#'\n                name = 'pwToAdd'\n                className = \"accountInputTwo\"\n                aria-required=\"true\"\n                aria-label=\"Password for account deletion\"\n                aria-describedby=\"accountInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <button type = 'submit'>Enter</button>\n\n            </div>\n\n          </form>\n\n          <Link to = '/tableTop' className = \"tableTopLink\" >\n\n            <span className = \"tableTopLinkText\">Table Top</span>\n\n          </Link>\n\n        </div>\n\n        <div className = \"accountPage\">\n\n          <h1 className = \"accountHeading\">Account</h1>\n\n          <p\n\n            className = \"accountInstructions\"\n            id = \"accountInstructions\"\n\n          >Enter the username and password to delete the account.</p>\n\n          <form\n\n            onSubmit = { this.onSubmitForm }\n            className = \"mobileAccountForm\"\n\n          >\n\n            <div className = \"mobileAccountInputs\">\n\n              <input\n\n                type = \"text\"\n                placeholder = 'User Name'\n                name = 'nameToAdd'\n                className = \"inputOne\"\n                aria-required=\"true\"\n                aria-label=\"User name for mobile account deletion\"\n                aria-describedby=\"accountInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <input\n\n                type = \"text\"\n                placeholder = 'Password123!@#'\n                name = 'pwToAdd'\n                className = \"inputTwo\"\n                aria-required=\"true\"\n                aria-label=\"Password for mobile account deletion\"\n                aria-describedby=\"accountInstructions\"\n                autocomplete = \"off\"\n\n              />\n\n              <button\n\n                type = 'submit'\n                className = 'accountButton'\n\n              >Enter</button>\n\n            </div>\n\n          </form>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport Landing from './landing/landing.js';\n\nimport Registration from './registration/registration.js';\n\nimport TableTop from './tableTop/tableTop.js';\n\nimport Account from './account/account.js';\n\nimport './App.css';\n\n\n//const baseURL = 'http://localhost:8000';\nconst baseURL = 'https://cryptic-temple-96082.herokuapp.com/'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      unsuccessfulLogin: undefined,\n\n      password: undefined,\n\n      authToken: undefined,\n\n      accountDeleted: false,\n\n      registrationMessage: undefined,\n\n      foldersAndNotes: undefined,\n\n      notesToView: undefined,\n\n      folderCreated: false,\n\n      folderEdited: false,\n\n      folderDeleted: false,\n\n      noteCreated: false,\n\n      noteViewed: false,\n\n      notes: undefined,\n\n      noteEdited: false,\n\n      noteNameEdited: false,\n\n      noteDeleted: false,\n\n      userID: undefined\n\n    };\n\n\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.handleRegistration = this.handleRegistration.bind(this);\n\n    this.handleAccount = this.handleAccount.bind(this);\n\n    this.handleTableTopReady = this.handleTableTopReady.bind(this);\n\n    this.handleCreateFolder = this.handleCreateFolder.bind(this);\n\n    this.handleEditFolder = this.handleEditFolder.bind(this);\n\n    this.handleDeleteFolder = this.handleDeleteFolder.bind(this);\n\n    this.handleCreateNote = this.handleCreateNote.bind(this);\n\n    this.handleViewNote = this.handleViewNote.bind(this);\n\n    this.handleEditNote = this.handleEditNote.bind(this);\n\n    this.handleEditNoteName = this.handleEditNoteName.bind(this);\n\n    this.handleDeleteNote = this.handleDeleteNote.bind(this);\n\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n\n  makeBasicAuthToken(userName, password) {\n\n    return window.btoa(`${userName}:${password}`);\n\n  }\n\n\n  handleLogin(data) {\n\n    let authToken = this.makeBasicAuthToken(data[0], data[1]);\n\n    let url = `${baseURL}/login`;\n\n    let userName = data[0];\n\n    let password = data[1];\n\n    if (userName === \"\" || password === \"\") {\n\n      console.log(\"Must enter user information\");\n\n    } else {\n\n      let postBody = { userName, password, authToken };\n\n      let options = {\n\n        method: 'POST',\n\n        body: JSON.stringify(postBody),\n\n        headers: {\n\n          \"Content-Type\": \"application/json\"\n\n        }\n\n      };\n\n\n      fetch(url, options)\n\n        .then( res => {\n\n          if (!res.ok) {\n\n            alert('Invalid login credentials. Please try again.');\n\n            this.setState( { unsuccessfulLogin: true });\n\n          } else {\n\n            this.setState({\n\n              authToken: authToken,\n\n            });\n\n            this.props.history.push( \"/tableTop\" );\n\n          }\n\n        })\n\n    }\n  }\n\n\n  handleLogout() {\n\n    this.setState({\n\n      authToken: undefined\n\n    });\n  }\n\n\n  handleRegistration(data) {\n\n    let url = `${baseURL}/registration`;\n\n    let userName = data[0];\n\n    let password = data[1];\n\n    let postBody = {userName, password};\n\n    let options = {\n\n      method: 'POST',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (res.ok) {\n\n          this.setState({\n\n            registrationMessage: data.registrationMessage,\n\n          });\n\n        } else {\n\n          throw new Error('An error occurred');\n\n        }\n\n      })\n\n      .catch( err => {\n\n        console.log(err);\n\n        alert('Invalid registration credentials. Please try again.');\n\n      })\n  }\n\n\n\n  handleCreateFolder(data) {\n\n    let url = `${baseURL}/createFolder`;\n\n    let folderName = data[0];\n\n    let postBody = {folderName};\n\n    let options = {\n\n      method: 'POST',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Authorization\": this.state.authToken,\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          folderCreated: true\n\n        });\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n  handleEditFolder(newFolderName, folderID) {\n\n    let postBody = {newFolderName, folderID};\n\n    let url = `${baseURL}/editFolder/${folderID}`;\n\n    let options = {\n\n      method: 'PATCH',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then (res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then(data =>\n\n        {\n\n        this.setState({\n\n          folderEdited: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n  handleDeleteFolder(folderID) {\n\n    let postBody = {folderID};\n\n    let url = `${baseURL}/deleteFolder`;\n\n    let options = {\n\n      method: 'DELETE',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then (res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred')\n\n        }\n\n        return res.json()\n\n      })\n\n      .then( data =>\n\n        {\n\n        this.setState({\n\n          folderDeleted: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n  handleCreateNote(data) {\n\n    let folderID = data[0];\n\n    let noteName = data[1][0];\n\n    let noteText = data[1][1];\n\n    let postBody = {folderID, noteName, noteText};\n\n    let url = `${baseURL}/createNote`;\n\n    let options = {\n\n      method: 'POST',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data =>\n\n        {\n\n        this.setState({\n\n          noteCreated: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n   }\n\n\n  handleViewNote(noteName) {\n\n    let url = `${baseURL}/viewNote/${noteName}`;\n\n    let options = {\n\n      method: 'GET',\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then(data =>\n\n        {\n\n        this.setState({\n\n          noteToView: data[0]\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n  handleEditNote(noteText, noteID) {\n\n    let postBody = {noteText, noteID};\n\n    let url = `${baseURL}/editNote`;\n\n    let options = {\n\n      method: 'PATCH',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json()\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          noteEdited: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n  handleEditNoteName(noteName, noteID) {\n\n    let postBody = {noteName, noteID};\n\n    let url = `${baseURL}/editNoteName`;\n\n    let options = {\n\n      method: 'PATCH',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json()\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          noteNameEdited: true\n\n        })\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n  handleDeleteNote(noteID) {\n\n    let postBody = {noteID};\n\n    let url = `${baseURL}/deleteNote`;\n\n    let options = {\n\n      method: 'DELETE',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          noteDeleted: data.noteDeleted\n\n        });\n\n        this.handleTableTopReady();\n\n      })\n  }\n\n\n\n\n\n  handleAccount(data) {\n\n    let url = `${baseURL}/deleteAccount`;\n\n    let userName = data[0];\n\n    let password = data[1];\n\n    let postBody = {userName, password};\n\n    let options = {\n\n      method: 'DELETE',\n\n      body: JSON.stringify(postBody),\n\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        } else {\n\n          return res.json();\n\n        }\n\n      })\n\n      .then( data => {\n\n        this.setState({\n\n          accountDeleted: true,\n\n          authToken: undefined\n\n        })\n\n        this.handleLogout();\n\n      })\n\n      .catch( err => {\n\n        alert('Invalid login credentials. Please try again.');\n\n      })\n  }\n\n\n\n\n  handleTableTopReady() {\n\n    let url = `${baseURL}/tableTopReady`;\n\n    let options = {\n\n      method: 'GET',\n\n      headers: {\n\n        \"Authorization\": this.state.authToken,\n\n        \"Content-Type\": \"application/json\"\n\n      }\n\n    };\n\n\n\n    fetch(url, options)\n\n      .then ( res => {\n\n        if (!res.ok) {\n\n          throw new Error('An error occurred');\n\n        }\n\n        return res.json();\n\n      })\n\n      .then( data => {\n\n        this.setState( {\n\n          foldersAndNotes: data\n\n        })\n      })\n  }\n\n\n\n  render() {\n\n    if (this.state.authToken === undefined) {\n\n      return (\n\n        <div className = 'App'>\n\n          <Switch>\n\n              <Route path = '/registration' >\n\n                <Registration onAddItems = { this.handleRegistration } />\n\n              </Route>\n\n\n              <Route >\n\n                <Landing\n\n                  onAddItems = { this.handleLogin }\n                  unsuccessfulLogin =  { this.state.unsuccessfulLogin }\n\n                />\n\n              </Route>\n\n            </Switch>\n\n        </div>\n      )\n\n    } else {\n\n      return (\n\n        <div className='App'>\n\n          <Switch>\n\n            <Route\n\n              exact path = '/account'\n              render = { ({ history }) => {\n\n                return <Account onAddItems = { this.handleAccount } />\n\n                        }} >\n\n            </Route>\n\n\n            <Route>\n\n              <TableTop\n\n                listenForTableTopReady = { this.handleTableTopReady }\n                foldersAndNotesToLoad = { this.state.foldersAndNotes }\n                createFolder = { this.handleCreateFolder }\n                editFolder = { this.handleEditFolder }\n                deleteFolder = { this.handleDeleteFolder }\n                noteDetail = { this.handleCreateNote }\n                viewNote = { this.handleViewNote }\n                noteToView = { this.state.noteToView }\n                editNote = { this.handleEditNote }\n                editNoteName = {this.handleEditNoteName }\n                deleteNote = { this.handleDeleteNote }\n                onLogoutClick = { this.handleLogout } />\n\n            </Route>\n\n          </Switch>\n\n        </div>\n\n      )\n    }\n  }\n}\n\nexport default withRouter(App)\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n  <BrowserRouter>\n\n    <App />\n\n  </BrowserRouter>,\n\n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}